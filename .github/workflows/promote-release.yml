name: Promote Release to Main

on:
  push:
    branches:
      - release

permissions:
  contents: write
  pull-requests: write

jobs:
  promote-release:
    name: Test & Merge release ‚Üí main
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: |
          npm install @salesforce/cli --global
          sf --version

      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SF_AUTH_URL }}" > auth-url.txt
          sf org login sfdx-url --sfdx-url-file auth-url.txt --set-default --alias OrgDEV
          rm auth-url.txt

      - name: Run Apex Tests
        run: |
          if [ -f test-manifest.txt ]; then
            TEST_CLASSES=$(grep -v '^\s*$' test-manifest.txt | paste -sd, -)
            echo "üéØ Running tests: $TEST_CLASSES"
            sf apex run test --target-org OrgDEV --tests "$TEST_CLASSES" --wait 30 --result-format human --output-dir test-results
          else
            echo "‚ö†Ô∏è No test-manifest.txt found - skipping tests"
            exit 1
          fi

      - name: Configure Git
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch branches
        if: success()
        run: |
          git fetch origin main
          git fetch origin release

      - name: Checkout main branch
        if: success()
        run: git checkout main

      - name: Merge release into main
        if: success()
        run: git merge origin/release --no-edit

      - name: Push changes to main
        if: success()
        run: git push origin main

      - name: Notify success
        if: success()
        run: echo "‚úÖ Successfully merged 'release' into 'main' after passing tests"

      - name: Notify failure
        if: failure()
        run: echo "‚ùå Tests failed - release not promoted"